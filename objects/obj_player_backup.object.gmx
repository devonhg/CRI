<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cri_body</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_sentient</parentName>
  <maskName>spr_player_test</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_arm = spr_cri_arm;
s_head = spr_cri_head; 

/*

hoverVariance = 0;
hoverSwitch = false; 

//p = 0;

maxSpeed = 400;

phy_fixed_rotation = true;

//States
state_m_left = false;
state_m_right = false; 
state_m_up = false;
state_m_down = false; 

state_a_holding = false; 

obj_holding = -4; 

//dir_look = image_angle; 

arm_back_angle = 0; 
arm_front_angle = 0; 
head_angle = 0; 

arm_back_angle_set = 0;
arm_front_angle_set = 0; 
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///States

//obtain instance id of currently grabbed object. 
if con_control.key_grab or con_control.key_hold{
    nearGrab = instance_position(mouse_x,mouse_y, par_grabbable); 
    if nearGrab != -4{
        obj_holding = nearGrab;
    }
}else if !con_control.key_grab and !con_control.key_hold{
    obj_holding = -4;
} 

state_m_left = con_control.key_left;
state_m_right = con_control.key_right;
state_m_up = con_control.key_up;
state_m_down = con_control.key_down;

state_a_holding = obj_holding.holding;
state_look_dir = sign(mouse_x - x);

state_m_dir = -state_m_left + state_m_right;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State Conditions

/*
if state_m_dir = -1{
    if phy_rotation &gt;= -14{ phy_rotation -= 1; }   
    physics_apply_force(x,y,-maxSpeed,0);
}

if state_m_dir = 1{
    if phy_rotation &lt;= 14{ phy_rotation += 1; }    
    physics_apply_force(x,y,maxSpeed,0); 
}


if state_m_dir = 0{
    if phy_rotation &gt; 0 phy_rotation -= 1;
    if phy_rotation &lt; 0 phy_rotation += 1; 
}

if state_m_up{
    physics_apply_force(x,y,0,-maxSpeed);
}

if state_m_down{
    physics_apply_force(x,y,0,maxSpeed);
}
if state_a_holding{

}else{

} 

image_xscale = state_look_dir; 
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hover Code

/*

if !state_m_up and !state_m_down{
    if hoverSwitch = false{
        hoverVariance += 1
        if hoverVariance &gt;= 20{
            hoverSwitch = !hoverSwitch; 
            physics_apply_impulse(x,y, 0, (.5 * phy_mass));
        }
    }if hoverSwitch = true{
        hoverVariance -= 1
        if hoverVariance &lt;= -20{
            hoverSwitch = !hoverSwitch;  
            physics_apply_impulse(x,y, 0, (-.5 * phy_mass));
        }
    }
}

physics_apply_force(x,y, 0, (-15 * phy_mass))
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Item Collecting 
if obj_holding.holding 
and (con_control.key_hold /*and con_control.key_grab*/)
and distance_to_point(nearGrab.x, nearGrab.y) &lt; 50{
    nearGrab.isCarried = true; 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*

var s;//A temp variable to make setting frame convienent; 
var a;//A temp variable for angles
var ap_xx;//Arm Position
var ap_yy;
var ang_di;//Angle Difference; 

if state_a_holding s = 0 else s = 1

//Draw Back Arm
    if state_look_dir = 1{    
    
        if state_a_holding arm_back_angle_set = 30
        else arm_back_angle_set = 0;          
        
        arm_back_angle += scr_rotate_to(arm_back_angle, arm_back_angle_set, 5);
        scr_draw_limb(65, 17, arm_back_angle, spr_cri_arm, 0, -1, 1);    
    }else{    
        if state_a_holding arm_back_angle_set = 330
        else arm_back_angle_set = 0;  
        
        arm_back_angle += scr_rotate_to(arm_back_angle, arm_back_angle_set, 5);
        scr_draw_limb(115, 17, arm_back_angle, spr_cri_arm, 0,1,1);
    }

//Draw Body
    draw_self();
    image_index = s; 


//Draw Front Arm
    if state_look_dir = 1{   
        arm_front_angle += scr_rotate_to(arm_front_angle, arm_front_angle_set, 5);
        scr_draw_limb(115, 17,  arm_front_angle, spr_cri_arm, 0, 1, 1);    
    }else{
    
        arm_front_angle += scr_rotate_to(arm_front_angle, arm_front_angle_set, 5);
        scr_draw_limb(65, 17,  arm_front_angle, spr_cri_arm, 0, -1, 1);
    }
    
    
//Head
    var ang = point_direction(phy_position_x, phy_position_y-20, mouse_x, mouse_y);
    var dif = angle_difference(ang, head_angle);
    
    head_angle = scr_convert_angle(head_angle)
    head_angle += median(-5, dif, 5); 

    if state_look_dir = 1{   
        head_angle = angle_clamp(image_angle + head_angle, 0, 30);  
        scr_draw_limb(90, 20, head_angle, spr_cri_head, s,1,1);
    }else{ 
        head_angle = angle_clamp(head_angle, 180, 30);    
        scr_draw_limb(90, 20, head_angle, spr_cri_head, s,1,-1);
    }
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,-16</point>
    <point>16,12</point>
    <point>16,28</point>
    <point>12,40</point>
    <point>4,40</point>
    <point>0,28</point>
    <point>0,12</point>
    <point>4,-16</point>
  </PhysicsShapePoints>
</object>
