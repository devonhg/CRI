<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Core - Game Settings
gVersion = "indev 1.0";
gName = "CRI";
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Core - Game Variables
debugMode = false
Paused = false;
gameSpeed = 60;
test0 = 0;
test1 = 0;
test2 = 0;
test3 = 0;
test4 = 0;
test5 = 0;
test6 = 0;
test7 = 0;
test8 = 0;
test9 = 0; 
xGrid = 16;
yGrid = 16;

phy_xgrav = 0;
phy_ygrav = 15;

phy_xgrav_set = phy_xgrav;
phy_ygrav_set = phy_ygrav;

world_rotation = 0; 

window_set_caption(gName + " " + gVersion);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,con_control); 
instance_create(x,y, cTrans);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics Function
physics_world_gravity(phy_xgrav, phy_ygrav);  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Core - Event and Command Handling 

//The code that runs all the custom events
if !Paused{
    with (all){
        event_perform(ev_other, ev_user0); //Begin Step
        event_perform(ev_other, ev_user1); //Step
        event_perform(ev_other, ev_user2); //End Step
        //event_perform(ev_other, ev_user3); //Pauseable Code
        if image_speed != 0 image_speed = 0; 
        x = round(x);
        y = round(y); 
        
    }   
    with (par_physics){
        phy_active = true;
    }
    //phy_xgrav = phy_xgrav_set;
    //phy_ygrav = phy_ygrav_set; 
}else{
    with (all){
        path_speed = 0;
         
    }
    with (par_physics){
        phy_active = false;
    }
    
    //phy_xgrav = 0;
    //phy_ygrav = 0; 
    

    
}



//Developer Short Keys
if keyboard_check(vk_control) and keyboard_check_pressed(ord("Q")) game_end();
if keyboard_check(vk_control) and keyboard_check_pressed(ord("D")) debugMode = !debugMode;
if keyboard_check(vk_control) and keyboard_check_pressed(ord("R")) game_restart();
if keyboard_check(vk_control) and keyboard_check_pressed(ord("F")) window_set_fullscreen(!(window_get_fullscreen()));
if keyboard_check(vk_control) and keyboard_check_pressed(ord('P')) Paused = !Paused;

//Debug mode camera control
if debugMode = true{
    if keyboard_check(vk_numpad8) view_yview -= 1;
    if keyboard_check(vk_numpad4) view_xview -= 1;
    if keyboard_check(vk_numpad6) view_xview += 1;
    if keyboard_check(vk_numpad2) view_yview += 1;
}
show_debug_overlay(debugMode);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
var rot = scr_convert_angle(obj_player.image_angle - 90),
    XX = lengthdir_x(15 ,rot),
    YY = lengthdir_y(15, rot);

if instance_exists(obj_player){ 
    physics_world_gravity( XX, YY); 
    view_angle[0] = obj_player.phy_rotation;     
}

cMaster.test0 = "XX: " + string(XX);
cMaster.test1 = "YY: " + string(YY);
cMaster.test2 = "Rot: " + string(rot);*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Core - Cleanup
if debugMode = true debugMode = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics Functions
physics_world_create(0.1);                      //Pixel to meters scale
physics_world_update_iterations(20);            //iterations per step
physics_world_update_speed(60); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Core - Room Management
if !(room_speed = gameSpeed) room_speed = gameSpeed;
if room = rm_ini room_goto_next(); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Core - Controller Inclusions 
scr_obj_to_rooms(rom_intro, rm_intro);
scr_obj_to_rooms(con_level, rm_core);
scr_room_to_objects(rm_test, rom_test, con_level ); 
scr_room_to_objects(rm_denial, rom_denial, con_level ); 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrFullWindow(250,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Core - Debug 

//Hit ctrl+D to activate Debug mode
if debugMode = true{
    textDraw =  
                "Room: "+string(room_get_name(room))+"#"
                +"View Enabled: " + string(view_enabled) +"#"
                +"View X: " + string(view_xview) +"#"
                +"View Y: " + string(view_yview) +"#"
                +"Port X: " + string(view_wport) +"#"
                +"Port Y: " + string(view_hport) +"#"
                +"v0: "+string(test0)+"#" 
                +"v1: "+string(test1)+"#" 
                +"v2: "+string(test2)+"#"
                +"v3: "+string(test3)+"#"
                +"v4: "+string(test4)+"#"
                +"v5: "+string(test5)+"#"
                +"v6: "+string(test6)+"#"
                +"v7: "+string(test7)+"#"
                +"v8: "+string(test8)+"#"
                +"v9: "+string(test9)+"#";
                
    var a = round(string_width(textDraw)/40)*40, 
        b = round(string_height(textDraw)/40)*40,
        c = c_white;   
    draw_set_alpha(.5);                 
    draw_rectangle_color(25, 25, a+50, b+100, c, c, c, c, false);  
    draw_set_alpha(1);                  
    draw_set_color(c_black);
    draw_set_font(foDefault);
    draw_text(30,30, textDraw);
    draw_set_font(-1); 
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
